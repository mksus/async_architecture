version: '3'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:5.4.1
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-server:5.4.1
    hostname: broker
    container_name: broker
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: broker:29092
      CONFLUENT_METRICS_REPORTER_ZOOKEEPER_CONNECT: zookeeper:2181
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      CONFLUENT_METRICS_ENABLE: 'true'
      CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'

  auth-service:
    image: auth-service
    depends_on:
      - broker
      - zookeeper
    build:
      dockerfile: Dockerfile_auth_service
      context: .
    ports:
      - "8000:8000"
    command: python3 ./auth_service/manage.py runserver 0.0.0.0:8000
    environment:
      TERM: 'xterm'
      KAFKA_BROKER_URL: 'broker:29092'
    volumes:
      - type: bind
        source: ./auth_service
        target: /code/auth_service

  billing-service:
    image: billing-service
    depends_on:
      - broker
      - zookeeper
      - auth-service
    build:
      dockerfile: Dockerfile_billing_service
      context: .
    ports:
      - "8002:8002"
    command: python3 ./billing_service/manage.py runserver 0.0.0.0:8002
    environment:
      TERM: 'xterm'
      KAFKA_BROKER_URL: 'broker:29092'
      AUTH_SERVICE_HOST: 'auth-service:8000'
    volumes:
      - type: bind
        source: ./billing_service
        target: /code/billing_service

  tracker-service:
    image: tracker-service
    depends_on:
      - broker
      - zookeeper
      - auth-service
      - billing-service
    build:
      dockerfile: Dockerfile_tracker_service
      context: .
    ports:
      - "8001:8001"
    command: python3 ./tracker_service/manage.py runserver 0.0.0.0:8001
    environment:
      TERM: 'xterm'
      KAFKA_BROKER_URL: 'broker:29092'
    volumes:
      - type: bind
        source: ./tracker_service
        target: /code/tracker_service

  billing-consumer:
    image: billing-consumer
    depends_on:
      - broker
      - zookeeper
      - auth-service
      - billing-service
    build:
      dockerfile: Dockerfile_billing_service
      context: .
    command: python3 ./billing_service/manage.py consumer_command
    environment:
      TERM: 'xterm'
      KAFKA_BROKER_URL: 'broker:29092'
    volumes:
      - type: bind
        source: ./billing_service
        target: /code/billing_service


  analytics-consumer:
    image: analytics-consumer
    depends_on:
      - broker
      - zookeeper
      - auth-service
      - billing-service
      - tracker-service
    build:
      dockerfile: Dockerfile_analytics_service
      context: .
    command: python3 ./analytics_service/manage.py consumer_command
    environment:
      TERM: 'xterm'
      KAFKA_BROKER_URL: 'broker:29092'
    volumes:
      - type: bind
        source: ./analytics_service
        target: /code/analytics_service